/* Generated By:JavaCC: Do not edit this line. Sql.java */
package edu.buffalo.cse.sql;

import java.sql.Array;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.List;
import java.util.Set;
import java.util.Stack;
import java.beans.Expression;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.InputStreamReader;
import java.io.ObjectInputStream.GetField;

import javax.swing.text.TabExpander;


import edu.buffalo.cse.sql.Schema.Var;
import edu.buffalo.cse.sql.data.Datum;
import edu.buffalo.cse.sql.plan.AggregateNode;
import edu.buffalo.cse.sql.plan.ExprTree;
import edu.buffalo.cse.sql.plan.JoinNode;
import edu.buffalo.cse.sql.plan.NullSourceNode;
import edu.buffalo.cse.sql.plan.ProjectionNode;
import edu.buffalo.cse.sql.plan.AggregateNode.AggColumn;
import edu.buffalo.cse.sql.plan.ExprTree.OpCode;
import edu.buffalo.cse.sql.plan.PlanNode;
import edu.buffalo.cse.sql.plan.PlanNode.Type;
import edu.buffalo.cse.sql.plan.ProjectionNode.Column;
import edu.buffalo.cse.sql.plan.ScanNode;
import edu.buffalo.cse.sql.plan.SelectionNode;
import edu.buffalo.cse.sql.plan.UnionNode;


public class Sql {

	public static void main( String[] args )
	{
		System.out.println("You haven't implemented me yet!");
	}

	public static List<Datum[]> execQuery(
			Map<String, Schema.TableFromFile> tables,
			PlanNode q
	)
	throws SqlException
	{
		if(q.type==Type.AGGREGATE)
		{
			List<Datum[]> testAggResults = AggregateTestCase.callAggregateTest(tables, q);
			return testAggResults;
		}
		else if(q.type==Type.PROJECT)
		{
			ProjectionNode pnode=(ProjectionNode)q;
			if(pnode.getChild().type==PlanNode.Type.NULLSOURCE)
			{
				ConstTestCase ctc = new ConstTestCase();
				List<Datum[]> ret = ctc.handleConstCase(q);
				return ret;
			}
			else{
				ProjectionTestCase ptc = new ProjectionTestCase();
				List<Datum[]> ret= ptc.handleProjectionTestCase(tables, q);
				return ret;
			}
		}
		else if(q.type==Type.UNION)
		{
			UnionTestCase utc = new UnionTestCase();
			return utc.processUnionQuery(q, tables);
		}
		throw new SqlException("execQuery() is unimplemented"); 
	}

	public static List<List<Datum[]>> execFile(
			File program)
			throws SqlException
			{
		try {
			List<List<Datum[]>> results=new ArrayList<List<Datum[]>>();
			SyntaxChecker query = new SyntaxChecker(new java.io.FileReader(program));
			try {
				TableQueryDetails tableQueryDetails = query.Start();
				for(PlanNode pnode:tableQueryDetails.getQ())
				{
					//System.out.println(pnode.detailString());
					results.add(execQuery(tableQueryDetails.getTable(), pnode));
				}
				return results;
			} catch (ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		throw new SqlException("execQuery() is unimplemented"); }
}//
